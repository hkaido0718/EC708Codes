# Clear memory
rm(list = ls())
# Packages
library(mlogit)
data("TravelMode", package = "AER")
View(TravelMode)
# This code is based on the documentation of the mlogit package developed by Yves Croissant
# Clear memory
rm(list = ls())
# Packages
library(mlogit)
data("Fishing", package = "mlogit")
Fish <- dfidx(Fishing, varying = 2:9, shape = "wide", choice = "mode")
View(Fish)
View(Fish)
View(Fishing)
summary(mlogit(mode ~ price + catch, data = Fish))
View(Fishing)
TravelMode$incomesq <- TravelMode$income^2
TravelMode$gcostsq <- TravelMode$gcost^2
TravelMode$travelsq <- TravelMode$travel^2
h1 <- mlogit(choice ~ gcost + travel | income, TravelMode)
summary(h1)
# Clear memory
rm(list = ls())
# Packages
library(mlogit)
data("TravelMode", package = "AER")
TravelMode$incomesq <- TravelMode$income^2
TravelMode$gcostsq <- TravelMode$gcost^2
TravelMode$travelsq <- TravelMode$travel^2
h1 <- mlogit(choice ~ gcost + travel | income, TravelMode)
summary(h1)
xbar <- with(TravelMode, data.frame(gcost = tapply(gcost, idx(h1, 2), mean),
travel = tapply(travel, idx(h1, 2), mean),
income = mean(income)))
View(xbar)
rm(list = ls())
# Packages
library(mlogit)
data("Fishing", package = "mlogit")
Fish <- dfidx(Fishing, varying = 2:9, shape = "wide", choice = "mode")
# Choices are beach, pier, (private) boat, charter (boat)
# Intercept and coefficient on income is normalized to 0 for "beach"
# Covariates are price (alternative specific), catch rate (alternative specific), and income (indiv. specific)
## a pure "conditional logit" model
summary(mlogit(mode ~ price + catch, data = Fish))
## a general Logit model
m <- mlogit(mode ~ price + catch | income, data = Fish)
summary(m)
## computing PEA
xbar <- with(Fish, data.frame(price = tapply(price, idx(m, 2), mean),
catch = tapply(catch, idx(m, 2), mean),
income = mean(income)))
View(xbar)
Fish$price
tapply(Fish$price, idx(m, 2), mean)
tapply(Fish$price, idx(m, 1), mean)
tapply(Fish$price, idx(m, 2), mean)
idx(m, 2)
View(Fishing)
